attribute vec4	a_WorldPosL;
attribute vec2	a_TexCoord_0;
attribute vec3	a_NormalL;
attribute vec3	a_TangentL;
attribute vec3	a_BinormalL;

uniform mat4	u_Matrix_WorldViewProjection;
uniform vec3	u_Light_Position_0;

varying vec3	v_LightPos;
varying vec2	v_Tex0;

void main()
{
	vec3 lightDir	= normalize( u_Light_Position_0 - vec3( a_WorldPosL ) );
	
	v_LightPos		= lightDir * mat3(a_TangentL, a_BinormalL, a_NormalL);
	
	v_Tex0			= a_TexCoord_0;

	gl_Position		= u_Matrix_WorldViewProjection * a_WorldPosL;
}
